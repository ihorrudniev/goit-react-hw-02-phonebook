{"version":3,"sources":["Components/Form/Form.js","Components/Filter/Filter.js","Components/Container/Container.js","Components/ContactsList/ContactsListItem.js","Components/ContactsList/ContactsList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","state","name","number","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","contact","id","props","onSubmit","reset","this","htmlFor","type","pattern","title","onChange","required","Component","Filter","Container","children","ContactItem","onDeleteContact","onClick","ContactsList","findContact","map","App","contacts","filter","addContact","hasContacts","alert","find","toLowerCase","normalizedFilter","toLocaleLowerCase","length","includes","deleteContact","contactId","prevState","changeFilter","getVisibleContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37fd8f8b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\n\r\nclass Form extends Component {\r\n  state = { name: \"\", number: \"\" };\r\n\r\n  nameInputId = shortid.generate();\r\n  numberInputId = shortid.generate();\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const contact = {\r\n      id: shortid.generate(),\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    };\r\n\r\n    this.props.onSubmit(contact);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label htmlFor={this.nameInputId}>\r\n          Name{\" \"}\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            // onChange={() => onToggleCompleted(id)}\r\n            id={this.nameInputId}\r\n            required\r\n          />\r\n        </label>\r\n        <br />\r\n        <label htmlFor={this.numberInputId}>\r\n          Number{\" \"}\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n        </label>\r\n        <br />\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Filter extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <h3>Find contacts by name</h3>\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={this.props.value}\r\n          onChange={this.props.onChange}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Filter;\r\n","const Container = ({ children }) => <div>{children}</div>;\r\n\r\nexport default Container;\r\n","const ContactItem = ({ id, name, number, onDeleteContact }) => {\r\n  return (\r\n    <li>\r\n      {name}: {number}\r\n      <button type=\"submit\" onClick={() => onDeleteContact(id)}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactItem;\r\n","import ContactItem from \"./ContactsListItem\";\r\n\r\nconst ContactsList = ({ findContact, onDeleteContact }) => {\r\n  return (\r\n    <ul>\r\n      {findContact().map(({ id, name, number }) => {\r\n        return (\r\n          <ContactItem\r\n            key={id}\r\n            id={id}\r\n            name={name}\r\n            number={number}\r\n            onDeleteContact={onDeleteContact}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n","import React, { Component } from \"react\";\nimport Form from \"./Components/Form\";\nimport Filter from \"./Components/Filter\";\nimport Container from \"./Components/Container\";\nimport ContactsList from \"./Components/ContactsList\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContact = (contact) => {\n    if (!this.hasContacts(contact.name)) {\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n    } else {\n      alert(`${contact.name} is already in contacts`);\n    }\n  };\n\n  hasContacts = (name) => {\n    return this.state.contacts.find((contact) => {\n      return contact.name.toLowerCase() === name.toLowerCase();\n    });\n  };\n\n  findContact = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLocaleLowerCase();\n\n    if (filter.length) {\n      return contacts.filter((contact) =>\n        contact.name.toLowerCase().includes(normalizedFilter)\n      );\n    } else {\n      return contacts;\n    }\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n\n        <Form onSubmit={this.addContact} />\n\n        <div>\n          <h2>Contacts</h2>\n          <Filter value={filter} onChange={this.changeFilter} />\n          <ContactsList\n            findContact={this.findContact}\n            onDeleteContact={this.deleteContact}\n          />\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}