{"version":3,"sources":["Components/Form/Form.js","Components/Filter/Filter.js","Components/Container/Container.js","Components/ContactsList/ContactsListItem.js","Components/ContactsList/ContactsList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","state","name","number","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","contact","id","props","onSubmit","reset","this","className","htmlFor","type","pattern","title","onChange","required","Component","Filter","Container","children","ContactItem","onDeleteContact","onClick","ContactsList","findContact","map","App","contacts","filter","addContact","hasContacts","alert","find","toLowerCase","normalizedFilter","toLocaleLowerCase","length","includes","deleteContact","contactId","prevState","changeFilter","getVisibleContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eeb7f687.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport shortid from \"shortid\";\nimport \"./Form.css\";\n\nclass Form extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  nameInputId = shortid.generate();\n  numberInputId = shortid.generate();\n\n  handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const contact = {\n      id: shortid.generate(),\n      name: this.state.name,\n      number: this.state.number,\n    };\n\n    this.props.onSubmit(contact);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form className=\"Form\" onSubmit={this.handleSubmit}>\n        <label className=\"Form__label\" htmlFor={this.nameInputId}>\n          Name{\" \"}\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            value={name}\n            onChange={this.handleChange}\n            // onChange={() => onToggleCompleted(id)}\n            id={this.nameInputId}\n            required\n          />\n        </label>\n        <br />\n        <label className=\"Form__label\" htmlFor={this.numberInputId}>\n          Number{\" \"}\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            value={number}\n            onChange={this.handleChange}\n            required\n          />\n        </label>\n        <br />\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from \"react\";\nimport \"./Filter.css\";\n\nclass Filter extends Component {\n  render() {\n    return (\n      <>\n        <h3 className=\"Filter__title\">Find contacts by name</h3>\n        <input\n          className=\"Filter__input\"\n          type=\"text\"\n          name=\"filter\"\n          value={this.props.value}\n          onChange={this.props.onChange}\n        />\n      </>\n    );\n  }\n}\n\nexport default Filter;\n","import \"./Container.css\";\n// import \"./App.css\";\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nexport default Container;\n","import \"./ContactsList.css\";\n\nconst ContactItem = ({ id, name, number, onDeleteContact }) => {\n  return (\n    <li className=\"Contacts__item\">\n      {name}: {number}\n      <button\n        className=\"Contacts__btn\"\n        type=\"submit\"\n        onClick={() => onDeleteContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default ContactItem;\n","import ContactItem from \"./ContactsListItem\";\nimport \"./ContactsList.css\";\n\nconst ContactsList = ({ findContact, onDeleteContact }) => {\n  return (\n    <ul className=\"ContactsList__item\">\n      {findContact().map(({ id, name, number }) => {\n        return (\n          <ContactItem\n            key={id}\n            id={id}\n            name={name}\n            number={number}\n            onDeleteContact={onDeleteContact}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default ContactsList;\n","import React, { Component } from \"react\";\nimport Form from \"./Components/Form\";\nimport Filter from \"./Components/Filter\";\nimport Container from \"./Components/Container\";\nimport ContactsList from \"./Components/ContactsList\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContact = (contact) => {\n    if (!this.hasContacts(contact.name)) {\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n    } else {\n      alert(`${contact.name} is already in contacts`);\n    }\n  };\n\n  hasContacts = (name) => {\n    return this.state.contacts.find((contact) => {\n      return contact.name.toLowerCase() === name.toLowerCase();\n    });\n  };\n\n  findContact = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLocaleLowerCase();\n\n    if (filter.length) {\n      return contacts.filter((contact) =>\n        contact.name.toLowerCase().includes(normalizedFilter)\n      );\n    } else {\n      return contacts;\n    }\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    return (\n      <Container>\n        <h1 className=\"App__title\">Phonebook</h1>\n\n        <Form onSubmit={this.addContact} />\n\n        <div>\n          <h1 className=\"App__title\">Contacts</h1>\n          <Filter value={filter} onChange={this.changeFilter} />\n          <ContactsList\n            findContact={this.findContact}\n            onDeleteContact={this.deleteContact}\n          />\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}